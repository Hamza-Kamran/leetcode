https://leetcode.com/problems/add-two-numbers/

class Solution(object):
    

    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
#         result = self.get_number(l1) + self.get_number(l2)
#         return self.get_nodeList(result)
        returnList = ListNode()
        rlcopy = returnList
        if l1 == None:
            return l2
        elif l2 == None: 
            return l1
        carry = 0
        while l1 != None and l2  != None: 
            returnList.val = l1.val + l2.val + carry
            carry = returnList.val // 10
            returnList.val = returnList.val % 10
            l1 = l1.next
            l2 = l2.next
            if l1 != None and l2 != None: 
                returnList.next = ListNode()
                returnList = returnList.next 
        remainingList = l1 if l1 != None else l2
        if remainingList != None: 
            returnList.next = self.addnum(remainingList, carry)
        elif carry != 0: 
            returnList.next = ListNode(carry, None)
        return rlcopy
            
            
    
    def addnum(self, l1, num):
        if num == 0: 
            return l1
        new_list = ListNode()
        nlcopy = new_list
        while l1 != None: 
            new_list.val = l1.val + num
            num = new_list.val // 10
            new_list.val = new_list.val % 10
            l1 = l1.next
            if l1 == None: 
                break
            new_list.next = ListNode()
            new_list = new_list.next
        if num != 0:
            new_list.next = ListNode(num, None)
        return nlcopy
            
