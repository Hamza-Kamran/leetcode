https://leetcode.com/problems/longest-substring-without-repeating-characters/

class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        if s == "":
            return 0
        maxLength = 1
        maxString = s[0]
        for i in range(len(s)):
            size = self.getLargestSize(s, i, maxLength)
            if size > maxLength: 
                maxLength = size
            else: 
                continue
        return maxLength
        
        
    def getLargestSize(self, s, index, minlength):
        largest = ""
        minString = s[index:index+minlength]
        if self.hasRepeats(minString):
            return 0
        for char in s[index+minlength:]:
            concatenated = minString + char
            if self.hasRepeats(concatenated):
                break
            minString = concatenated
        return len(minString)
    
    def hasRepeats(self, s):
        chardict = {}
        for char in s: 
            if chardict.get(char, 0) != 0:
                return True
            chardict[char] = 1
        return False
